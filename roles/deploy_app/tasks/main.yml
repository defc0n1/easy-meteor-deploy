---
  - name: ensure {{ deploy_dir }} exists
    sudo: yes
    file: name={{ item }} state=directory owner=root group=root
    with_items:
      - $deploy_dir
      - $deploy_app_dir

  - name: add bitbucket.org to known hosts
    sudo: yes
    known_hosts: host=bitbucket.org state=present

  - name: add github.com to known hosts
    sudo: yes
    known_hosts: host=github.com state=present

  - name: copy key files
    sudo: yes
    copy: src=keys/ dest=~/.ssh/ mode=0600

  - name: clone
    sudo: yes
    git: repo={{ repo_url }} dest={{ deploy_app_dir }} accept_hostkey=yes key_file=/root/.ssh/id_rsa-bitbucket

  - name: remove current running app
    sudo: yes
    file: path={{ deploy_app_dir }}/build state=absent recurse=no

  - name: build app
    sudo: yes
    shell: chdir={{ deploy_app_dir }}/app meteor build ../build -p {{ cordova_host }}

  - name: unbundle app
    sudo: yes
    shell: chdir={{ deploy_app_dir }}/build tar -xzvf app.tar.gz

  - name: install npm modules for unbundled apps
    sudo: yes
    shell: chdir={{ deploy_app_dir}}/build/bundle/programs/server/ npm install

  - name: patch install fibers
    sudo: yes
    shell: chdir={{ deploy_app_dir}}/build/bundle/programs/server/ mkdir node_modules || true; cd node_modules; rm -rf fibers; npm install fibers@1.0.1

  - name: register the current pids
    sudo: yes
    shell: ps aux | grep {{ pid_expression }} | grep -v grep | awk '{print $2}'
    register: pids

  - name: kill the old pids
    sudo: yes
    shell: kill -9 {{ item }}
    with_items: pids.stdout_lines

  - name: start app with forever
    sudo: yes
    shell:  >
      PORT={{ port }}
      MONGO_URL={{ mongo_url }}
      ROOT_URL={{ root_url }}
      forever start "{{ deploy_app_dir }}"/build/bundle/main.js
    async: 10
    poll: 1

  - name: copy nginx virtual host file
    sudo: yes
    template: src="app.j2"
              dest="/etc/nginx/sites-available/{{app_name}}"
              owner=root
              group=root

  - name: link nginx virtual host file
    sudo: yes
    file: src="/etc/nginx/sites-available/{{app_name}}"
          dest="/etc/nginx/sites-enabled/{{app_name}}"
          state=link

  - name: restart nginx
    sudo: yes
    service: name=nginx state=restarted
